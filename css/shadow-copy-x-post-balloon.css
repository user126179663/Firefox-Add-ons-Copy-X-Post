[shadow="balloon"] {
	
	--balloon-bg-color: var(--accent-color, rgba(255,255,255,1));
	--balloon-border-color: rgba(0,0,0,1);
	--balloon-border-radius: .3rem;
	--balloon-border-width-value: 1;
	--balloon-border-width: calc(1px * var(--balloon-border-width-value));
	--balloon-box-shadow-outline: 0 0 0 var(--balloon-border-width) var(--balloon-border-color);
	--balloon-box-shadow-dropped: 0 0 .5rem 1px rgba(0,0,0,.2);
	--balloon-padding: .5rem .6rem;
	
	--balloon-direction-size: 6px;
	--balloon-direction-positioin-ratio-x: .2;
	
	--balloon-direction-after-translate: 0 calc(100% - var(--balloon-border-width) * 2);
	
	--balloon-spawn-duration: .3s;
	
	--balloon-glimmer-size-width: 128px;
	--balloon-glimmer-size-height: 100%;
	--balloon-glimmer-position-x: calc(var(--balloon-glimmer-size-width) * -1);
	--balloon-glimmer-bg-image:
		linear-gradient(-75deg, transparent 0%, transparent 10%, white 10.1%, white 80%, transparent 90.1%);
	
	--balloon-animation-original-initiate: balloon-spawn var(--balloon-spawn-duration) ease 0s 1 normal forwards running;
	--balloon-animation-original-leave: exit .3s ease-out 2s 1 reverse forwards running;
	--balloon-animation-original-leave-immediately: exit .3s ease-out 0s 1 reverse forwards running;
	--balloon-direction-animation-original-initiate:
		balloon-direction-glimmer calc(var(--balloon-glimmer-duration) * 1.1) ease-out 0s 1 normal forwards running;
	
	--balloon-animation-less-anime-initiate:
		balloon-less-anime-initiate var(--balloon-spawn-duration) ease 0s 1 normal forwards running;
	--balloon-animation-less-anime-leave:
		balloon-less-anime-leave .3s ease-out 2s 1 normal forwards running;
	--balloon-animation-less-anime-leave-immediately:
		balloon-less-anime-leave .3s ease-in 0s 1 normal forwards running;
	--balloon-direction-animation-less-anime-initiate: none;
	
	--balloon-animation-no-anime-initiate:
		noop-initiate 0s linear 0s 1 normal forwards running;
	--balloon-animation-no-anime-leave:
		noop-leave 0s linear 2s 1 normal forwards running;
	--balloon-animation-no-anime-leave-immediately:
		noop-leave 0s linear 0s 1 normal forwards running;
	--balloon-direction-animation-no-anime-initiate: none;
	
	background: var(--balloon-bg-color);
	border-radius: var(--balloon-border-radius);
	box-shadow: var(--balloon-box-shadow-outline), var(--balloon-box-shadow-dropped);
	font: normal normal normal .6rem/1 sans-serif;
	left: calc(var(--bound-1-left) + var(--scroll-x) + (var(--bound-1-width) - (var(--bound-width) * var(--balloon-direction-positioin-ratio-x) * 2)) / 2);
	padding: var(--balloon-padding);
	pointer-events: none;
	position: absolute;
	top: calc((var(--bound-1-top) + var(--scroll-y) + var(--bound-height) * -1.4));
	transform-origin: center bottom;
	z-index: 2;
	
}
[shadow="balloon"].checked {
	
	--balloon-bg-color: var(--accent-color, rgba(40,220,80,1));
	--balloon-bg-color: var(--accent-color, rgb(29, 155, 240));
	--balloon-border-color: rgba(40,160,80,1);
	--balloon-border-radius: 40%;
	--balloon-border-width-value: 2;
	
	--balloon-direction-after-translate: 0 75%;
	
	--balloon-check-mark-width: 3px;
	--balloon-check-mark-bound-height: .5rem;
	--balloon-check-mark-bound-width: .8rem;
	--balloon-check-color: rgba(255,255,255,1);
	
}
[shadow="balloon"] {
	
	--balloon-animation-initiate: var(--balloon-animation-original-initiate);
	--balloon-animation-leave: var(--balloon-animation-original-leave);
	--balloon-animation-leave-immediately: var(--balloon-animation-original-leave-immediately);
	
	--balloon-direction-animation-initiate: var(--balloon-direction-animation-original-initiate);
	
}
[shadow="balloon"].checked {
	
	--balloon-checked-animation-initiate:
		var(--balloon-animation-original-initiate),
		balloon-glimmer var(--balloon-glimmer-duration) ease 0s 1 normal forwards running;
	
}
[shadow="balloon"][data-cxp-interface="less-anime"] {
	
	--balloon-animation-initiate: var(--balloon-animation-less-anime-initiate);
	--balloon-animation-leave: var(--balloon-animation-less-anime-leave);
	--balloon-animation-leave-immediately: var(--balloon-animation-less-anime-leave-immediately);
	--balloon-direction-animation-initiate: var(--balloon-direction-animation-less-anime-initiate);
	
	--balloon-direction-animation-initiate: var(--balloon-direction-animation-less-anime-initiate);
	
}
[shadow="balloon"][data-cxp-interface="less-anime"].checked {
	
	--balloon-checked-animation-initiate: var(--balloon-animation-less-anime-initiate);
	
}
[shadow="balloon"][data-cxp-interface="no-anime"] {
	
	--balloon-animation-initiate: var(--balloon-animation-no-anime-initiate);
	--balloon-animation-leave: var(--balloon-animation-no-anime-leave);
	--balloon-animation-leave-immediately: var(--balloon-animation-no-anime-leave-immediately);
	--balloon-direction-animation-initiate: var(--balloon-direction-animation-no-anime-initiate);
	
	--balloon-direction-animation-initiate: var(--balloon-direction-animation-no-anime-initiate);
	
}
[shadow="balloon"][data-cxp-interface="no-anime"].checked {
	
	--balloon-checked-animation-initiate: var(--balloon-animation-no-anime-initiate);
	
}
[shadow="balloon"].flat:not(html) {
	
	--balloon-border-width-value: 0;
	--balloon-direction-before-display: none;
	--balloon-direction-after-translate: 0 90%;
	
}
[shadow="balloon"].initiated {
	
	--balloon-glimmer-duration: calc(var(--balloon-spawn-duration) * 1);
	
	animation: var(--balloon-animation-initiate);
	
}
[shadow="balloon"].checked.initiated {
	
	animation: var(--balloon-checked-animation-initiate);
	
}
[shadow="balloon"].initiated[enter-anime-ended] {
	
	animation: var(--balloon-animation-leave);
	
}
[shadow="balloon"].initiated[finish] {
	
	
	animation: var(--balloon-animation-leave-immediately) !important;
	
}
[shadow="balloon"]::after,
[shadow="balloon"]::before {
	
	--balloon-direction-left: calc(var(--bound-width) * var(--balloon-direction-positioin-ratio-x));
	
	border-bottom: var(--balloon-direction-size) solid rgba(0,0,0,0);
	border-left: var(--balloon-direction-size) solid var(--balloon-border-color);
	bottom: 0;
	box-sizing: border-box;
	content: "";
	display: block;
	position: absolute;
	translate: 0 100%;
	left: var(--balloon-direction-left);
	
}
[shadow="balloon"].flat::after,
[shadow="balloon"].flat::before {
	
	translate: 0 75% !important;
	
}
[shadow="balloon"].checked::after,
[shadow="balloon"].checked::before {
	
	transform-origin: center top;
	animation: var(--balloon-direction-animation-initiate);
	
}
@keyframes balloon-direction-glimmer {
	
	0% {
		scale: 100% 0;
	}
	33% {
		scale: 100% 0;
	}
	100% {
		scale: 100% 100%;
	}
	
}
[shadow="balloon"]::before {
	
	display: var(--balloon-direction-before-display, block) !important;
	
}
[shadow="balloon"]::after {
	
	border-top: 2px solid var(--balloon-bg-color);
	border-left-color: var(--balloon-bg-color);
	translate: var(--balloon-direction-after-translate) !important;
	scale: calc(1 - var(--balloon-border-width-value) / 20);
	
}

[shadow="balloon"].checked .content::before {
	
	border-left: var(--balloon-check-mark-width) solid var(--balloon-check-color);
	border-bottom: var(--balloon-check-mark-width) solid var(--balloon-check-color);
	box-sizing: border-box;
	content: "";
	display: block;
	height: var(--balloon-check-mark-bound-height);
	rotate: -45deg;
	translate: 0 -17.5%;
	width: var(--balloon-check-mark-bound-width);
	
}